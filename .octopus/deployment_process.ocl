step "create-namespace" {
    name = "Create Namespace"
    properties = {
        Octopus.Action.TargetRoles = "k8s-demo"
    }

    action {
        action_type = "Octopus.Script"
        is_disabled = true
        properties = {
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.RunOnServer = "false"
            Octopus.Action.Script.ScriptFileName = "create-namespace.ps1"
            Octopus.Action.Script.ScriptParameters = "-namespace #{project.enviornment}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }
        worker_pool_variable = ""
    }
}

step "deploy-kubernetes-yaml" {
    name = "Deploy Kubernetes YAML"
    properties = {
        Octopus.Action.TargetRoles = "k8s-demo"
    }

    action {
        action_type = "Octopus.KubernetesDeployRawYaml"
        properties = {
            Octopus.Action.GitRepository.FilePathFilters = "demo-frontend/demo-frontend.yaml"
            Octopus.Action.GitRepository.Source = "Project"
            Octopus.Action.Kubernetes.DeploymentTimeout = "180"
            Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
            Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
            Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
            Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "demo-frontend/demo-frontend.yaml"
            Octopus.Action.KubernetesContainers.Namespace = "#{Octopus.Environment.Name}"
            Octopus.Action.Package.JsonConfigurationVariablesTargets = "**/*.{yml,yaml}"
            Octopus.Action.Script.ScriptSource = "GitRepository"
        }

        packages "octopus-zero-to-hero_demo-frontend" {
            acquisition_location = "NotAcquired"
            feed = "github-containers"
            package_id = "octopussolutionsengineering/octopus-zero-to-hero/demo-frontend"
            properties = {
                Extract = "False"
                Purpose = "DockerImageReference"
                SelectionMode = "immediate"
            }
        }
    }
}